{"version":3,"sources":["images/get.png","components/MultiWord/MultiWord.js","components/TopWord/TopWord.js","components/Docs/Docs.js","components/Home/Home.js","components/TopNav/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","val","TopWord","state","topWord","nextWord","words","pastWords","useStyles","makeStyles","root","width","handleChange","pop","thing","console","log","push","localStorage","setItem","setState","length","axios","get","then","res","cacheGrab","data","unshift","copyState","copy","clear","terpWord","getItem","storageArr","split","listItems","this","map","word","Chip","label","Container","Typography","variant","component","Box","display","flexDirection","p","m","bgcolor","gutterBottom","key","Button","color","onClick","justifyContent","BottomNavigation","className","BottomNavigationAction","value","icon","React","Component","valuetext","MultiWord","onChange","copyLowerState","toLower","toString","replace","copyCapState","dinus","newArr","x","charAt","toUpperCase","slice","toCaps","copyCamelState","cam","copyHyphenState","hyphy","copyUnderState","Under","event","numChoice","chosen","amount","parseInt","newarray1","flexWrap","id","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","onMouseUp","Docs","codeString","href","src","Get","height","align","theme","flexGrow","position","menuButton","marginRight","spacing","title","dropdown","top","right","left","zIndex","border","padding","backgroundColor","palette","background","paper","TopNav","useState","anchorEl","setAnchorEl","handleClose","classes","AppBar","Toolbar","aria-controls","aria-haspopup","ClickAwayListener","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","Link","to","exact","path","Home","App","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.74f63a40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/get.dfa81e2b.png\";","import React, { useState } from 'react';\r\nimport axios from \"axios\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport LoopRoundedIcon from '@material-ui/icons/LoopRounded';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport 'fontsource-roboto';\r\n\r\nvar val;\r\nfunction valuetext(value) {\r\n   val = value\r\n    return val\r\n  }\r\n  // let thing = []\r\n\r\n  // thing.push('how about now')\r\n  // thing.push('2nd thing')\r\n  // console.log(localStorage.getItem(1))\r\n  // localStorage.setItem(1, thing);\r\n\r\n\r\n\r\nexport default class MultiWord extends React.Component {\r\n    constructor() {\r\n        super()\r\n    this.state = {\r\n        topWord: \"TopWord\",\r\n        words: [],\r\n        numChoice:2\r\n    };\r\n    // this.valueSlider = this.valuetext.bind(this)\r\n}\r\n  useStyles = makeStyles({\r\n        root: {\r\n          width: 500,\r\n        },\r\n      });\r\n\r\n      \r\n      \r\n      componentDidMount() {\r\n            this.setState({numChoice:val})\r\n            var amount = parseInt(this.state.numChoice)\r\n          \r\n          axios.get(`https://namegenserver.herokuapp.com/multi/${amount}`).then((res) => {\r\n              let words = res.data;\r\n            //   console.log(words);\r\n              // const words = res.data;\r\n              this.setState({ words });\r\n\r\n              // console.log(this.state.words);\r\n            });\r\n        }\r\n                onChange =()=> {\r\n\r\n                } \r\n\r\n                copyLowerState = ()=> {\r\n                  const toLower = this.state.words.toString().replace(/,/g, '')\r\n                  copy(toLower)\r\n                }\r\n                copyCapState = ()=> {\r\n                  const dinus = this.state.words\r\n                  var newArr = []\r\n                  for(var x = 0; x < dinus.length; x++){\r\n                  newArr.push(dinus[x].charAt(0).toUpperCase()+dinus[x].slice(1));\r\n                  const toCaps = newArr.toString().replace(/,/g, '')\r\n                  copy(toCaps);\r\n                  }\r\n                }\r\n                copyCamelState = ()=> {\r\n                  let [cam, ...dinus] = this.state.words\r\n                  let newArr = []\r\n                  for(var x = 0; x < dinus.length; x++){\r\n                  newArr.push(dinus[x].charAt(0).toUpperCase()+dinus[x].slice(1));\r\n                  // console.log('cam: '+ cam, newArr)\r\n                }\r\n                const toCaps = newArr.toString().replace(/,/g, '')\r\n                copy(cam+toCaps);\r\n                }\r\n\r\n                copyHyphenState = ()=> {\r\n                  const hyphy = this.state.words.toString().replace(/,/g, '-')\r\n                  copy(hyphy)\r\n                }\r\n\r\n                copyUnderState = ()=> {\r\n                  const Under = this.state.words.toString().replace(/,/g, '_')\r\n                  copy(Under)\r\n                }\r\n                \r\n\r\n           \r\n        handleChange = (event, value) => {\r\n            // console.log(val)\r\n            this.setState({numChoice:val})\r\n            var chosen = val\r\n            console.log(chosen)\r\n            axios.get(`https://namegenserver.herokuapp.com/multi/${chosen}`).then((res) => {\r\n              let words = res.data;\r\n            //   console.log(words);\r\n              // const words = res.data;\r\n              this.setState({ words });\r\n\r\n              // console.log(this.state.words);\r\n            });\r\n  };\r\n\r\n\r\n  render (){\r\n      const dinus = this.state.words\r\n        var newarray1 = []\r\n      for(var x = 0; x < dinus.length; x++){\r\n        newarray1.push(dinus[x].charAt(0).toUpperCase()+dinus[x].slice(1));\r\n    }\r\n    // console.log(newarray1)\r\n      return (\r\n    <Container>\r\n    <Box p={1} m={1} bgcolor=\"background.paper\">\r\n    <Typography variant=\"h3\" component=\"h3\">Generated Name</Typography>\r\n\r\n      <Typography display=\"flex\" flexWrap=\"wrap\" variant=\"h5\" component=\"h5\" gutterBottom key={newarray1}>{newarray1}</Typography>\r\n</Box>\r\n<Box display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1} bgcolor=\"background.paper\">\r\n<Button variant=\"contained\" color=\"primary\" onClick={this.copyCapState} >\r\n Copy PascalCasing\r\n</Button>\r\n<Button variant=\"contained\" color=\"primary\"  onClick={this.copyCamelState} >\r\n  Copy camelCase\r\n</Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={this.copyLowerState} >\r\n  Copy flatcase\r\n</Button>\r\n<Button variant=\"contained\" color=\"primary\" onClick={this.copyHyphenState} >\r\n  Copy kebab-case\r\n</Button>\r\n<Button variant=\"contained\" color=\"primary\" onClick={this.copyUnderState} >\r\n  Copy snake_case\r\n</Button>\r\n</Box>\r\n<div className={this.useStyles.root}>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n       How Many Words\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={2}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={10}\r\n        onMouseUp={this.handleChange}\r\n      />\r\n   \r\n    </div>\r\n\r\n<Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\r\n    </Box>\r\n   \r\n    </Container>\r\n  );}\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from \"axios\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport LoopRoundedIcon from '@material-ui/icons/LoopRounded';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport 'fontsource-roboto';\r\nimport copy from 'copy-to-clipboard';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\nexport default class TopWord extends React.Component {\r\n  state = {\r\n    topWord: \"TopWord\",\r\n    nextWord:\"\",\r\n    words: [],\r\n    pastWords:[]  \r\n  };\r\n  useStyles = makeStyles({\r\n        root: {\r\n          width: 500,\r\n        },\r\n      });\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://namegenserver.herokuapp.com/10`).then((res) => {\r\n      let [terpWord, ...words] = res.data;\r\n      // console.log(terpWord);\r\n      // const words = res.data;\r\n      this.setState({ words });\r\n      // console.log(this.state.words);\r\n      this.setState({ topWord:terpWord });\r\n      if (localStorage.getItem('Previous Words') === null){\r\n        let storageArr = [terpWord];\r\n        // storageArr.push(terpWord)\r\n        this.setState({pastWords:[storageArr]})\r\n        }\r\n        else{\r\n          let storageArr = localStorage.getItem('Previous Words').split(',')\r\n          console.log(storageArr)\r\n        storageArr.push(terpWord)\r\n        localStorage.setItem(\"Previous Words\", storageArr);\r\n\r\n          this.setState({pastWords:storageArr})\r\n          \r\n          }\r\n    });\r\n  }\r\n  \r\n  handleChange = () => {\r\n    let nextWord = this.state.words.pop()\r\n    var thing = this.state.pastWords\r\n    console.log(thing)\r\n    thing.push(nextWord)\r\n    localStorage.setItem(\"Previous Words\", thing);\r\n    this.setState({nextWord:nextWord})\r\n    this.setState({topWord:nextWord})\r\n    \r\n    if (this.state.words.length < 4) {\r\n      axios.get(`https://namegenserver.herokuapp.com/10`).then((res) => {\r\n      let cacheGrab = res.data;\r\n      console.log(cacheGrab)\r\n      this.state.words.unshift(...cacheGrab)\r\n    })\r\n      \r\n    }\r\n        console.log(this.state.topWord)\r\n  };\r\n  \r\n  copyState = ()=> {copy(this.state.topWord);}\r\n  clear = ()=> {\r\n      this.setState({ pastWords:[this.state.topWord] })\r\n      localStorage.setItem(\"Previous Words\", [this.state.topWord]);\r\n  }\r\n  // handleClick = () => {\r\n  //   console.info('You clicked the Chip.');\r\n  // };\r\n  \r\n  render (){\r\n    const listItems = this.state.pastWords.map((word) =>\r\n    <Chip label={word} />\r\n);\r\n  return (\r\n    <Container>\r\n    <Typography variant=\"h3\" component=\"h3\">Top Word</Typography>\r\n    <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\">\r\n\r\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom key={this.state.topWord}>{this.state.topWord}</Typography>\r\n</Box>\r\n<Box display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1} bgcolor=\"background.paper\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={this.copyState}>\r\n  Copy\r\n</Button>\r\n</Box>\r\n<Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\r\n    </Box>\r\n    <BottomNavigation   className={this.useStyles.root}>\r\n      {/* <BottomNavigationAction label=\"Previous\" value=\"previous\"  icon={<ArrowBackIosIcon />} /> */}\r\n      <BottomNavigationAction label=\"Recents\" value=\"recents\" onClick={this.clear} icon={<RestoreIcon />} />\r\n      {/* <BottomNavigationAction label=\"Refresh\" value=\"refresh\" icon={<LoopRoundedIcon />} /> */}\r\n      <BottomNavigationAction label=\"Next\" value=\"next\" onClick={this.handleChange} icon={<ArrowForwardIosIcon />} />\r\n    </BottomNavigation>\r\n    <Container>\r\n    <Typography variant=\"h3\" component=\"h3\">Past Words</Typography>\r\n    <ul>{listItems}</ul>\r\n    </Container>\r\n    </Container>\r\n  );}\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CodeBlock from \"@tenon-io/tenon-codeblock\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Get from \"../../images/get.png\";\r\nexport default class Docs extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\r\n          API Documentation\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Version\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          This API currently in αlpha\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          User Story\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          You need some words for a project, When you visit the API, you get the desired amount of words back in an array that is easy to parse through and find what you want.\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Future Development\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          I plan on soon adding an alphabetical enpoint to get all words starting with 'b' for example.\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          This API in its current form simply delivers an arrays of words in\r\n          different varients.\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          If you would like more that one word in the array, change the last\r\n          number. Currently there are 7 numbered endpoints currently hosted on\r\n          Heroku.\r\n        </Typography>\r\n        <CodeBlock\r\n          codeString={`https://namegenserver.herokuapp.com/1\r\nhttps://namegenserver.herokuapp.com/10\r\nhttps://namegenserver.herokuapp.com/100\r\nhttps://namegenserver.herokuapp.com/1000\r\nhttps://namegenserver.herokuapp.com/10000\r\nhttps://namegenserver.herokuapp.com/100000\r\nhttps://namegenserver.herokuapp.com/multi/ANYNUMBER`}\r\n        />\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          This API in its current form simply delivers an arrays of words in\r\n          different varients.\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n        <a href=\"https://shyaboi.github.io/pstmn/\">\r\n          Getwoman</a> Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          If you would like, you can use my API tester to try out these\r\n          endpoints, simply choose 'Get', under method, choose the URL endpoint\r\n          to get, then submit, and your response should look similar to the\r\n          screenshot below.\r\n        </Typography>\r\n        <a href=\"https://shyaboi.github.io/pstmn/\">\r\n          <img src={Get} width=\"950px\" height=\"500px\" />\r\n          Getwoman\r\n        </a>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Javascript Fetch Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          The simplest way to make a request in vanilla Javascript would be the\r\n          fetch method. You can fetch ten random words such as the example below:\r\n        </Typography>\r\n        <CodeBlock\r\n          codeString={`fetch('https://namegenserver.herokuapp.com/10')\r\n    .then(response => response.json())\r\n    .then(data => console.log(data));`}\r\n        />\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          This request will come back with one result, which will be ten random\r\n          words, all in lower case, in an array. The response should look\r\n          similar to the response below;\r\n        </Typography>\r\n        <CodeBlock\r\n          codeString={`[\r\n  \"nonascendently\",\r\n  \"trainful\",\r\n  \"spins\",\r\n  \"tui\",\r\n  \"overshadowment\",\r\n  \"wispish\",\r\n  \"netty\",\r\n  \"bombilation\",\r\n  \"playwright\",\r\n  \"geologic\"\r\n]`}\r\n        />\r\n\r\n<Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          JQuery Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          The simplest way to make a request with JQuery would be the\r\n          get method. You can get ten random words such as the example below:\r\n        </Typography>\r\n        <CodeBlock codeString={`$.get(\"https://namegenserver.herokuapp.com/10\", \r\n  function(data, status){\r\n    console.log(\"Data: \" + data);\r\n  });`} />\r\n  <Typography variant=\"body1\" gutterBottom>\r\n          This request will come back with one result, which will be ten random\r\n          words, all in lower case, in an array. The response should look\r\n          similar to the response below;\r\n        </Typography>\r\n        <CodeBlock\r\n          codeString={`[\r\n  \"peebeens\",\r\n  \"stodging\",\r\n  \"wendell\",\r\n  \"leporids\",\r\n  \"massageuse\",\r\n  \"sontag\",\r\n  \"photoradio\",\r\n  \"toiled\",\r\n  \"aspread\",\r\n  \"intruse\"\r\n]`}\r\n        />\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Node.js HTTPS Module Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          To use the API with Node HTTPS Get method, you can use a request\r\n          similar to the example below;\r\n        </Typography>\r\n\r\n          <CodeBlock\r\n            codeString={`var https = require('https');\r\n\r\nvar options = {\r\n  host: 'namegenserver.herokuapp.com',\r\n  path: '/10/',\r\n  headers: {\r\n    Accept': 'application/json'\r\n            }\r\n          };\r\n  https.get(options, function (res) {\r\n    var json = '';\r\n    res.on('data', function (chunk) {\r\n                  json += chunk;\r\n              });\r\n    res.on('end', function () {\r\n      if (res.statusCode === 200) {\r\n        try {\r\n          var data = JSON.parse(json);\r\n            // data is available here:\r\n            console.log(json);\r\n                      } catch (e) {\r\n                          console.log('Error parsing JSON!');\r\n                      }\r\n                  } else {\r\n                      console.log('Status:', res.statusCode);\r\n                  }\r\n              });\r\n          }).on('error', function (err) {\r\n              console.log('Error:', err);\r\n          });`}\r\n          />\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          This request will come back with one result, which will be ten random\r\n          words, all in lower case, in an array. The response should look\r\n          similar to the response below;\r\n        </Typography>\r\n        <CodeBlock\r\n          codeString={`[\r\n  \"unmaturative\",\r\n  \"asternata\",\r\n  \"outroving\",\r\n  \"sullenly\",\r\n  \"precapitalist\",\r\n  \"pharmacologists\",\r\n  \"kinetoscopic\",\r\n  \"weakeners\",\r\n  \"unpredictabilness\",\r\n  \"banked\"\r\n]`}\r\n        />\r\n\r\n<Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Python Request Module Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          To use the API with Pythons request module, you can use a request\r\n          similar to the example below;\r\n        </Typography>\r\n        <CodeBlock codeString={`import requests\r\nr = requests.get('https://namegenserver.herokuapp.com/10')\r\nprint(r.json())`} />\r\n\r\n<Typography variant=\"body1\" gutterBottom>\r\n          This request will come back with one result, which will be ten random\r\n          words, all in lower case, in an array. The response should look\r\n          similar to the response below;\r\n        </Typography>\r\n        <CodeBlock\r\n          codeString={`[\r\n  \"solonetses\",\r\n  \"adenotomy\",\r\n  \"scrappier\",\r\n  \"baldricked\",\r\n  \"persorption\",\r\n  \"neuronist\",\r\n  \"belzebub\",\r\n  \"undepressible\",\r\n  \"teguments\",\r\n  \"lowerer\"\r\n]`}\r\n        />\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          cURL Usage\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          To use the API with cURL, open your terminal, and you can use a request\r\n          similar to the example below;\r\n        </Typography>\r\n        <CodeBlock codeString={`curl \"https://namegenserver.herokuapp.com/10\"`}/>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          The result of the cURL will be an array of words in the specified amount, similar to the example below;\r\n          <CodeBlock codeString={`% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\nDload  Upload   Total   Spent    Left  Speed\r\n100   130  100   130    0     0    214      0 --:--:-- --:--:-- --:--:--   214\r\n[\"strongyloplasmata\",\"overaccurate\",\"nonlegitimacy\",\"nyroca\",\"photolysis\",\"suers\",\"wiriness\",\"pararhotacism\",\"bides\",\"seafighter\"]\r\n`}/>\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport CodeBlock from '@tenon-io/tenon-codeblock';\r\nimport { Container } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default class Docs extends React.Component {\r\nrender (){\r\n    return (\r\n    <Container>\r\n          <Typography variant=\"h1\" component=\"h1\" align='center' gutterBottom>\r\n        ^\r\n        <br />\r\n        Welcome To \r\n        <br />\r\n        Name Generator 2\r\n      </Typography>\r\n    </Container>\r\n    )\r\n}\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport TopWord from \"../TopWord/TopWord\"\r\nimport MultiWord from \"../MultiWord/MultiWord\"\r\nimport Docs from \"../Docs/Docs\"\r\nimport Home from \"../Home/Home\"\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    border: '1px solid',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function TopNav() {\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar aria-controls=\"simple-menu\" aria-haspopup=\"true\">\r\n  \r\n          <ClickAwayListener >\r\n          <div>\r\n      <Button onClick={handleClick}>\r\n      <MenuIcon />\r\n\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose} component={Link} to=\"/Home\">Home</MenuItem>\r\n        <MenuItem onClick={handleClose}>FutureThings</MenuItem>\r\n        <MenuItem onClick={handleClose}>FutureThings</MenuItem>\r\n      </Menu>\r\n    </div>\r\n\r\n    </ClickAwayListener>\r\n\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n          <Button color=\"inherit\"><MenuItem component={Link} to=\"/TopWord\">Top Word</MenuItem>  </Button>\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          <Button color=\"inherit\"><MenuItem component={Link} to=\"/MultiWord\" >Name Generator</MenuItem></Button>\r\n          </Typography>\r\n          \r\n          \r\n           <Typography variant=\"h6\" className={classes.title}>\r\n          <Button color=\"inherit\"> <MenuItem component={Link} to=\"/Docs\" >API Documentation</MenuItem></Button>\r\n          </Typography>\r\n          {/* <Button color=\"inherit\">Anoter Thing</Button> */}\r\n</Toolbar>\r\n      </AppBar>\r\n\r\n\r\n\r\n\r\n\r\n      <Switch>\r\n      <Route exact path=\"/\">\r\n     <Redirect to=\"/Docs\" />\r\n </Route>\r\n <Route exact path=\"/namegen2\">\r\n     <Redirect to=\"/Docs\" />\r\n </Route>\r\n      <Route path=\"/Home\" component={Home}>\r\n\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/TopWord\" component={TopWord}>\r\n            <TopWord />\r\n          </Route>\r\n          <Route exact path=\"/MultiWord\" component={MultiWord}>\r\n            <MultiWord />\r\n          </Route>\r\n          <Route exact path=\"/Docs\" component={Docs}>\r\n            <Docs />\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Router>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TopNav from \"./components/TopNav/TopNav\"\nimport Container from '@material-ui/core/Container';\nimport 'fontsource-roboto';\n\nexport default class App extends React.Component {\n\n\n  \n\n  render() {\n    return (\n    <Container >\n      <TopNav />\n      \n    </Container>\n\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}