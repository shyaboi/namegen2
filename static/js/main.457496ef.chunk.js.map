{"version":3,"sources":["components/MultiWord/MultiWord.js","components/TopWord/TopWord.js","components/Docs/Docs.js","components/TopNav/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["val","TopWord","state","topWord","nextWord","words","useStyles","makeStyles","root","width","handleChange","event","newValue","pop","console","log","setState","length","axios","get","then","res","cacheGrab","data","unshift","copyState","copy","terpWord","Container","Box","display","flexDirection","p","m","bgcolor","Typography","variant","component","gutterBottom","key","this","Button","color","onClick","justifyContent","BottomNavigation","className","BottomNavigationAction","label","value","icon","React","Component","valuetext","MultiWord","onChange","copyLowerState","toLower","toString","replace","copyCapState","dinus","newArr","x","push","charAt","toUpperCase","slice","toCaps","copyCamelState","cam","copyHyphenState","hyphy","copyUnderState","Under","numChoice","chosen","amount","parseInt","newarray1","flexWrap","id","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","onMouseUp","Docs","codeString","theme","flexGrow","position","menuButton","marginRight","spacing","title","dropdown","top","right","left","zIndex","border","padding","backgroundColor","palette","background","paper","TopNav","useState","anchorEl","setAnchorEl","handleClose","classes","AppBar","Toolbar","aria-controls","aria-haspopup","ClickAwayListener","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","Link","to","path","exact","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.457496ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from \"axios\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport LoopRoundedIcon from '@material-ui/icons/LoopRounded';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport 'fontsource-roboto';\r\n\r\nvar val;\r\nfunction valuetext(value) {\r\n   val = value\r\n    return val\r\n  }\r\n\r\n\r\nexport default class MultiWord extends React.Component {\r\n    constructor() {\r\n        super()\r\n    this.state = {\r\n        topWord: \"TopWord\",\r\n        words: [],\r\n        numChoice:2\r\n    };\r\n    // this.valueSlider = this.valuetext.bind(this)\r\n}\r\n  useStyles = makeStyles({\r\n        root: {\r\n          width: 500,\r\n        },\r\n      });\r\n\r\n      \r\n      \r\n      componentDidMount() {\r\n            this.setState({numChoice:val})\r\n            var amount = parseInt(this.state.numChoice)\r\n          \r\n          axios.get(`https://namegenserver.herokuapp.com/multi/${amount}`).then((res) => {\r\n              let words = res.data;\r\n            //   console.log(words);\r\n              // const words = res.data;\r\n              this.setState({ words });\r\n\r\n              // console.log(this.state.words);\r\n            });\r\n        }\r\n                onChange =()=> {\r\n\r\n                } \r\n\r\n                copyLowerState = ()=> {\r\n                  const toLower = this.state.words.toString().replace(/,/g, '')\r\n                  copy(toLower)\r\n                }\r\n                copyCapState = ()=> {\r\n                  const dinus = this.state.words\r\n                  var newArr = []\r\n                  for(var x = 0; x < dinus.length; x++){\r\n                  newArr.push(dinus[x].charAt(0).toUpperCase()+dinus[x].slice(1));\r\n                  const toCaps = newArr.toString().replace(/,/g, '')\r\n                  copy(toCaps);\r\n                  }\r\n                }\r\n                copyCamelState = ()=> {\r\n                  let [cam, ...dinus] = this.state.words\r\n                  let newArr = []\r\n                  for(var x = 0; x < dinus.length; x++){\r\n                  newArr.push(dinus[x].charAt(0).toUpperCase()+dinus[x].slice(1));\r\n                  // console.log('cam: '+ cam, newArr)\r\n                }\r\n                const toCaps = newArr.toString().replace(/,/g, '')\r\n                copy(cam+toCaps);\r\n                }\r\n\r\n                copyHyphenState = ()=> {\r\n                  const hyphy = this.state.words.toString().replace(/,/g, '-')\r\n                  copy(hyphy)\r\n                }\r\n\r\n                copyUnderState = ()=> {\r\n                  const Under = this.state.words.toString().replace(/,/g, '_')\r\n                  copy(Under)\r\n                }\r\n                \r\n\r\n           \r\n        handleChange = (event, value) => {\r\n            // console.log(val)\r\n            this.setState({numChoice:val})\r\n            var chosen = val\r\n            console.log(chosen)\r\n            axios.get(`https://namegenserver.herokuapp.com/multi/${chosen}`).then((res) => {\r\n              let words = res.data;\r\n            //   console.log(words);\r\n              // const words = res.data;\r\n              this.setState({ words });\r\n\r\n              // console.log(this.state.words);\r\n            });\r\n  };\r\n\r\n\r\n  render (){\r\n      const dinus = this.state.words\r\n        var newarray1 = []\r\n      for(var x = 0; x < dinus.length; x++){\r\n        newarray1.push(dinus[x].charAt(0).toUpperCase()+dinus[x].slice(1));\r\n    }\r\n    console.log(newarray1)\r\n      return (\r\n    <Container>\r\n    <Box p={1} m={1} bgcolor=\"background.paper\">\r\n      <Typography display=\"flex\" flexWrap=\"wrap\" variant=\"h5\" component=\"h5\" gutterBottom key={newarray1}>{newarray1}</Typography>\r\n</Box>\r\n<Box display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1} bgcolor=\"background.paper\">\r\n<Button variant=\"contained\" color=\"primary\" onClick={this.copyCapState} >\r\n Copy PascalCasing\r\n</Button>\r\n<Button variant=\"contained\" color=\"primary\"  onClick={this.copyCamelState} >\r\n  Copy camelCase\r\n</Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={this.copyLowerState} >\r\n  Copy flatcase\r\n</Button>\r\n<Button variant=\"contained\" color=\"primary\" onClick={this.copyHyphenState} >\r\n  Copy kebab-case\r\n</Button>\r\n<Button variant=\"contained\" color=\"primary\" onClick={this.copyUnderState} >\r\n  Copy snake_case\r\n</Button>\r\n</Box>\r\n<div className={this.useStyles.root}>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n       How Many Words\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={2}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={10}\r\n        onMouseUp={this.handleChange}\r\n      />\r\n   \r\n    </div>\r\n\r\n<Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\r\n    </Box>\r\n   \r\n    </Container>\r\n  );}\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from \"axios\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport LoopRoundedIcon from '@material-ui/icons/LoopRounded';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport 'fontsource-roboto';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nexport default class TopWord extends React.Component {\r\n  state = {\r\n    topWord: \"TopWord\",\r\n    nextWord:\"\",\r\n    words: [],    \r\n  };\r\n  useStyles = makeStyles({\r\n        root: {\r\n          width: 500,\r\n        },\r\n      });\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://namegenserver.herokuapp.com/10`).then((res) => {\r\n      let [terpWord, ...words] = res.data;\r\n      // console.log(terpWord);\r\n      // const words = res.data;\r\n      this.setState({ words });\r\n      // console.log(this.state.words);\r\n      this.setState({ topWord:terpWord });\r\n    });\r\n  }\r\n  handleChange = (event, newValue) => {\r\n    let nextWord = this.state.words.pop()\r\n    console.log(nextWord)\r\n    this.setState({nextWord:nextWord})\r\n    this.setState({topWord:nextWord})\r\n    if (this.state.words.length < 4) {\r\n      axios.get(`https://namegenserver.herokuapp.com/10`).then((res) => {\r\n      let cacheGrab = res.data;\r\n      console.log(cacheGrab)\r\n      this.state.words.unshift(...cacheGrab)\r\n    })\r\n      \r\n    }\r\n        console.log(this.state.topWord)\r\n  };\r\n  \r\n  copyState = ()=> {copy(this.state.topWord);}\r\n\r\n\r\n  render (){\r\n  return (\r\n    <Container>\r\n    <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\">\r\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom key={this.state.topWord}>{this.state.topWord}</Typography>\r\n</Box>\r\n<Box display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1} bgcolor=\"background.paper\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={this.copyState}>\r\n  Copy\r\n</Button>\r\n</Box>\r\n<Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\r\n    </Box>\r\n    <BottomNavigation   className={this.useStyles.root}>\r\n      {/* <BottomNavigationAction label=\"Previous\" value=\"previous\"  icon={<ArrowBackIosIcon />} /> */}\r\n      <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Refresh\" value=\"refresh\" icon={<LoopRoundedIcon />} />\r\n      <BottomNavigationAction label=\"Next\" value=\"next\" onClick={this.handleChange} icon={<ArrowForwardIosIcon />} />\r\n    </BottomNavigation>\r\n    </Container>\r\n  );}\r\n}\r\n","import React, { useState } from 'react';\r\nimport CodeBlock from '@tenon-io/tenon-codeblock';\r\nimport { Container } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default class Docs extends React.Component {\r\nrender (){\r\n    return (\r\n    <Container>\r\n          <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n        API Documentation\r\n      </Typography>\r\n    <CodeBlock codeString={'dfggdf'}/>\r\n    </Container>\r\n    )\r\n}\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport TopWord from \"../TopWord/TopWord\"\r\nimport MultiWord from \"../MultiWord/MultiWord\"\r\nimport Docs from \"../Docs/Docs\"\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    border: '1px solid',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function TopNav() {\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar aria-controls=\"simple-menu\" aria-haspopup=\"true\">\r\n  \r\n          <ClickAwayListener >\r\n          <div>\r\n      <Button onClick={handleClick}>\r\n      <MenuIcon />\r\n\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>FutureThings</MenuItem>\r\n        <MenuItem onClick={handleClose}>FutureThings</MenuItem>\r\n        <MenuItem onClick={handleClose}>FutureThings</MenuItem>\r\n      </Menu>\r\n    </div>\r\n\r\n    </ClickAwayListener>\r\n\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n          <Button color=\"inherit\"><MenuItem component={Link} to=\"/TopWord\">Top Word</MenuItem>  </Button>\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          <Button color=\"inherit\"><MenuItem component={Link} to=\"/MultiWord\" >Repo Name Generator</MenuItem></Button>\r\n          </Typography>\r\n          \r\n          \r\n           <Typography variant=\"h6\" className={classes.title}>\r\n          <Button color=\"inherit\"> <MenuItem component={Link} to=\"/Docs\" >API Documentation</MenuItem></Button>\r\n          </Typography>\r\n          {/* <Button color=\"inherit\">Anoter Thing</Button> */}\r\n</Toolbar>\r\n      </AppBar>\r\n\r\n\r\n\r\n\r\n\r\n      <Switch>\r\n        \r\n          <Route path=\"/TopWord\" component={TopWord}>\r\n            <TopWord />\r\n          </Route>\r\n          <Route exact path=\"/MultiWord\" component={MultiWord}>\r\n            <MultiWord />\r\n          </Route>\r\n          <Route exact path=\"/Docs\" component={Docs}>\r\n            <Docs />\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Router>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TopNav from \"./components/TopNav/TopNav\"\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport 'fontsource-roboto';\nimport TopWord from \"./components/TopWord/TopWord\"\nimport MultiWord from \"./components/MultiWord/MultiWord\"\n\nexport default class App extends React.Component {\n\n\n  \n\n  render() {\n    return (\n    <Container >\n      <TopNav />\n      \n    </Container>\n     \n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}